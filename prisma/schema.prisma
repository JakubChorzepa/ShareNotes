generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Folder {
  id          String          @id @default(uuid())
  name        String
  ownerId     String
  password    String?
  owner       User            @relation("OwnedFolders", fields: [ownerId], references: [id])
  sharedUsers FolderShare[]   @relation("SharedFolders")
  notes       Note[]          @relation("FolderNotes")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model User {
  id            String          @id @default(cuid())         
  clerkUserId   String          @unique
  email         String          @unique
  username      String?         @unique
  ownedFolders  Folder[]        @relation("OwnedFolders")
  sharedFolders FolderShare[]   @relation("SharedFolders")
  notes         Note[]          @relation("UserNotes")
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model FolderShare {
  id       String   @id @default(uuid())
  folderId String
  userId   String

  folder   Folder   @relation("SharedFolders", fields: [folderId], references: [id])
  user     User     @relation("SharedFolders", fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([folderId, userId])
}

model Note {
  id          String   @id @default(uuid())
  title       String
  pdfUrl      String
  folderId    String?
  folder      Folder?  @relation("FolderNotes", fields: [folderId], references: [id])
  ownerId     String
  owner       User     @relation("UserNotes", fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
